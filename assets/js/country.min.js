// Função para buscar a lista de países na API e ordená-los em ordem alfabética
// Defina a função buscarPaises como uma função assíncrona que retorna uma Promessa
// Função para buscar a lista de países na API e ordená-los em ordem alfabética
async function buscarPaises() {
    const url = "https://restcountries.com/v3.1/all";

    try {
        const response = await fetch(url);
        const data = await response.json();

        const selectPais = document.getElementById("paisAutor");

        // Filtrar os países onde o campo 'translations' contenha informações em português ('por')
        const paisesPortugues = data.filter(pais => pais.translations && pais.translations.por);

        // Ordenar os países filtrados em ordem alfabética pelo nome comum em português
        paisesPortugues.sort((a, b) => {
            const nomeA = a.translations.por.common || a.name.common;
            const nomeB = b.translations.por.common || b.name.common;

            return nomeA.localeCompare(nomeB);
        });

        paisesPortugues.forEach(pais => {
            const option = document.createElement("option");
            option.value = pais.name.common;
            option.text = pais.translations.por.common || pais.name.common;
            selectPais.appendChild(option);
        });

        // Retorna a lista de países em português
        return paisesPortugues;
    } catch (error) {
        console.error("Erro ao buscar a lista de países: " + error);
        throw error; // Propaga o erro para que possa ser tratado externamente
    }
}

// Em qualquer parte do seu código onde você quiser chamar a função buscarPaises:
buscarPaises()
    .then(listaPaises => {
        // Aqui você pode continuar com outras ações após a lista de países ter sido carregada
        console.log("Lista de países carregada com sucesso.");
        // Você também pode acessar a lista de países aqui, se necessário
        
    })
    .catch(error => {
        // Trate qualquer erro que possa ocorrer durante o carregamento da lista de países
        console.error("Erro ao carregar a lista de países: " + error);
    });

// Função para preencher o select de país
function preencherSelectPais() {
    buscarPaises() // Chame a função buscarPaises() para buscar a lista de países
        .then(paisesPortugues => {
            const selectPaisAutor = document.getElementById("paisAutor");
            const selectPaisEditora = document.getElementById("paisEditora");

            // Preencha o select de país do autor com a lista de países em português
            paisesPortugues.forEach(pais => {
                const option = document.createElement("option");
                option.value = pais.name.common;
                option.text = pais.translations.por.common || pais.name.common;
                selectPaisAutor.appendChild(option);
            });

            // Preencha o select de país da editora com a mesma lista de países em português
            paisesPortugues.forEach(pais => {
                const option = document.createElement("option");
                option.value = pais.name.common;
                option.text = pais.translations.por.common || pais.name.common;
                selectPaisEditora.appendChild(option);
            });
        })
        .catch(error => {
            console.error("Erro ao buscar a lista de países: " + error);
        });
}

// Chame a função para preencher os selects de país e editora
preencherSelectPais();


//Configurar os eventos de envio para todos os seus formulários de cadastro
function configurarFormularioDeCadastro(formularioID) {
    const formulario = document.querySelector(formularioID);

    formulario.addEventListener("submit", function (e) {
        e.preventDefault();
        const form = this;
        const formData = new FormData(form);

        fetch("../assets/control/cadastro.php", {
            method: "POST",
            body: formData,
        })
        .then(response => response.text())
        .then(message => {
            // Atualizar a mensagem de sucesso no modal
            document.getElementById("modalSucessoMessage").textContent = message;
            console.log(message);

            // Mostrar o modal de sucesso
            $('#modalSucesso').modal('show');

            // Fechar o modal de sucesso após 2 segundos
            setTimeout(function () {
                $('#modalSucesso').modal('hide');
            }, 2000);
            form.reset();
            $('#cadastroAutorModal').modal('hide'); // Se você deseja fechar o modal do autor
            $('#cadastroEditoraModal').modal('hide'); // Se você deseja fechar o modal da editora
        })
        .catch(error => {
            console.error("Erro na solicitação:", error);
        });
    });
}

// Configure os formulários de cadastro
configurarFormularioDeCadastro("#cadastroAutorForm");
configurarFormularioDeCadastro("#cadastroEditoraForm");
